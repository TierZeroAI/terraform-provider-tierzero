---
page_title: "{{.Type}} {{.Name}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Type}}: {{.Name}}

{{ .Description | trimspace }}

Alert responders automatically investigate alerts matching specified criteria from configured webhook sources. When an alert matches the text patterns, TierZero's AI agent analyzes the alert using the configured runbook prompts and can send results to notification channels.

## Key Concepts

- **Webhook Sources**: Configure which monitoring platforms (PagerDuty, Opsgenie, FireHydrant, Rootly, Slack) to monitor for alerts
- **Matching Criteria**: Define text patterns that trigger automated investigation
- **Runbook**: Customize investigation behavior with two types of prompts:
  - `investigation_prompt`: Main investigation directive for detailed root cause analysis. Use this to define the investigation steps, queries to run, and analysis approach. Default: "Please investigate the issue and explain the root cause to the best of your abilities!"
  - `impact_and_severity_prompt`: Quick triage directive for rapid severity and impact assessment. Use this to quickly determine how many users or accounts are affected. Example impact_and_severity_prompt:
    ```
    Determine how many users were affected by the 500 error.
    Use the spans aggregation query using the filter:
    env:prod @http.method:<HTTP_METHOD> @http.route:* @http.status_code:500
    and facet on @usr.id.
    ```
- **Status**: Control whether the responder is ACTIVE (`enabled = true`) or PAUSED (`enabled = false`)

For more runbook examples, see the [TierZero Prompt Library](https://docs.tierzero.ai/prompt-library/alert-responder).

## Example Usage

{{ tffile (printf "examples/resources/%s/resource.tf" .Name)}}

{{ .SchemaMarkdown | trimspace }}

## Import

Import is supported using the alert responder's Global ID:

{{ codefile "shell" .ImportFile }}
